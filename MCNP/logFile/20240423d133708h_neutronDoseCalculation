*****Load pre-defined HU conversion properties and MCNP cross sections from conversionCT2tissue.mat.Note: Modification of conversionCT2tissue.mat using generateVar_conversionCT2tissue.m.**********Properties from (scaled) HU loaded are: Minimum value: -1000 and Maximum value: 0.Rescale slope from CT data is read to be: 1 and rescale intercept is read to be -1000.Please use question dialog to decide how to convert to scaled HU.**********You decided not to use DICOM rescale slope and intercept.**********Properties from rescaled HU are: Minimum value: 0 and Maximum value: 1000.*****Material types are assigned using the following HU intervals...air: 0 to 50lung: 50 to 830softTissue: 830 to 1280bone: 1280 to 5000*****0 voxels were redefined to be either air or soft tissue.
*****
Skin thickness has been set to: 1 mm.
*****
Additional 0 voxels were redefined to be either air or soft tissue.
*****
In case you wish to simulate BNCT irradiation make sure the PTV is called PTV_BNCT.
*****
Checking for PTV...
*****
PTV for BNCT detected. PTV will be filled with soft tissu and B-10 density specified in segmentation variable.
*****
*****
8 from softTissue voxels were cut from softTissue and associated to PTV_BNCT.
*****
Segmentation process performed sucessfully.
*****Calculate density from CT data with density given in [g/cm^3]********Neutron spectrum load from machine file.
***
Gamma/photon spectrum found in neutron machine. Will be included in the simulation as primary particles.
***
*****
Tally type: TMESH3...
*****
*****
MCNP calculation of dose distribution for bixel 1...
*****
Error while connecting to host, Es konnte keine Verbindung hergestellt werden, da der Zielcomputer die Verbindung verweigerte. (10061) 
Connect on sock (host=medappopc5.office.frm2.tum.de, port=8676) failed, exhaused all end points 
Unable to connect to 'medappopc5.office.frm2.tum.de:8676', 
sock error: Error = -1 
 

ans =

    -1

[Warning: File 'MCNPrunfile_bixel1o' not found.] 
[Warning: File 'MCNPrunfile_bixel1r' not found.] 
*****
Calculation for bixel 1 took 16.6523 seconds.
*****
*****
MCNP calculation of dose distribution for bixel 2...
*****
Error while connecting to host, Es konnte keine Verbindung hergestellt werden, da der Zielcomputer die Verbindung verweigerte. (10061) 
Connect on sock (host=medappopc5.office.frm2.tum.de, port=8676) failed, exhaused all end points 
Unable to connect to 'medappopc5.office.frm2.tum.de:8676', 
sock error: Error = -1 
 

ans =

    -1

[Warning: File 'MCNPrunfile_bixel1mo' not found.] 
[Warning: File 'MCNPrunfile_bixel1mr' not found.] 
*****
Calculation for bixel 2 took 16.6338 seconds.
*****
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\doseCalc\+DoseEngines\matRad_NeutronMCNPEngine.m',367,1)">367 </a>            dij = matRad_evaluateTallyMCNP(dij, cst);
clearvars -except cst ct dij binIntervals varHelper
matRad_cfg = MatRad_Config.instance();
cd(strcat(matRad_cfg.matRadRoot, filesep, 'MCNP', filesep, 'runfiles_tmp'));
tallyDataList = dir('MCNPrunfile_bixel*m');
tallyDataList

tallyDataList = 

  <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> with fields:

       name: 'MCNPrunfile_bixel1m'
     folder: 'D:\GitHub\matRad_Lucas\MCNP\runfiles_tmp'
       date: '18-Apr-2024 22:23:33'
      bytes: 6080012
      isdir: 0
    datenum: 7.3936e+05

dummyList = struct;
lengthList = dij.totalNumOfRays;
for listCounter = 1:lengthList
    i=1; while i<= lengthList && ~strcmp(tallyDataList(i).name, strcat('MCNPrunfile_bixel', int2str(listCounter), 'm')); i=i+1; end
    dummyList(listCounter).name = tallyDataList(i).name;
    dummyList(listCounter).folder = tallyDataList(i).folder;
    dummyList(listCounter).date = tallyDataList(i).date;
    dummyList(listCounter).bytes = tallyDataList(i).bytes;
    dummyList(listCounter).isdir = tallyDataList(i).isdir;
    dummyList(listCounter).datenum = tallyDataList(i).datenum;
end
dij.physicalDose{1} = spalloc(prod(dij.doseGrid.dimensions),dij.totalNumOfBixels,1);
for counterBixel=1:dij.totalNumOfBixels
    dij.doseMatrixBixel(counterBixel).physicalDose_relError{1} = spalloc(prod(dij.doseGrid.dimensions),1,1);
end
counterDijColumns = 0; % counter to go through the columns of dij
counterBeam = 1

counterBeam =

     1

counterBixel = 1

counterBixel =

     1

        counterDijColumns = counterDijColumns+1;
counterDijColumns

counterDijColumns =

     1

        dij.bixelNum(counterDijColumns) = counterBixel;
        dij.rayNum(counterDijColumns) = counterBixel;
        dij.beamNum(counterDijColumns) = counterBeam;
fileName
{Unrecognized function or variable 'fileName'.
} 
numel
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('numel')" style="font-weight:bold">numel</a>
Not enough input arguments.
} 
counterDijColumns

counterDijColumns =

     1

        resultMCNP = matRad_readDataFromText_TMESHvBioOpti(tallyDataList(counterDijColumns).name, 'TMESH3', 2);
Data output given in two columns.
        resultMCNP = resultMCNP';
        doseMatrixBixel.physicalDose = zeros(ct.cubeDim(2), ct.cubeDim(1), ct.cubeDim(3));   % Total dose
        doseMatrixBixel.physicalDose(1:end) = resultMCNP(:,1);
        doseMatrixBixel.physicalDose_relError = zeros(ct.cubeDim(2), ct.cubeDim(1), ct.cubeDim(3));  % Relative error of total dose
        doseMatrixBixel.physicalDose_relError(1:end) = resultMCNP(:,2);
        clear resultMCNP
        doseMatrix.physicalDose = permute(doseMatrix.physicalDose, [2,1,3]);    % Permute matrix to match matRad coordinate system
{Unable to resolve the name 'doseMatrix.physicalDose'.
} 
        doseMatrixBixel.physicalDose = permute(doseMatrixBixel.physicalDose, [2,1,3]);    % Permute matrix to match matRad coordinate system
        doseMatrixBixel.physicalDose = permute(doseMatrixBixel.physicalDose, [2,1,3]);    % Permute matrix to match matRad coordinate system
for cellCounter = 1:size(ct.tissueBin,2)
            if cellCounter == 1
                doseMatrixBixel.physicalDose(ct.tissueBin(cellCounter).linIndVol) = 0;   % Dose deposition in air is neglected
            else
                doseMatrixBixel.physicalDose(ct.tissueBin(cellCounter).linIndVol) = ...
                    doseMatrixBixel.physicalDose(ct.tissueBin(cellCounter).linIndVol)./mean(ct.density{1,1}(ct.tissueBin(cellCounter).linIndVol));   % MCNP output is in MeV/cm^3/source particle & ct.density is given in g/cm^3
            end
            mean(ct.density{1,1}(ct.tissueBin(cellCounter).linIndVol))
        end
{Unrecognized field name "tissueBin".
} 
        for cellCounter = 1:size(ct.tissueBin,2)
            if cellCounter == 1
                doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol) = 0;   % Dose deposition in air is neglected
            else
                doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol) = ...
                    doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol)./mean(ct.doseGridCT.density{1,1}(ct.doseGridCT.tissueBin(cellCounter).linIndVol));   % MCNP output is in MeV/cm^3/source particle & ct.doseGridCT.density is given in g/cm^3
            end
            mean(ct.doseGridCT.density{1,1}(ct.doseGridCT.tissueBin(cellCounter).linIndVol))
        end
{Unrecognized field name "tissueBin".
} 
for cellCounter = 1:size(ct.doseGridCT.tissueBin,2)
            if cellCounter == 1
                doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol) = 0;   % Dose deposition in air is neglected
            else
                doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol) = ...
                    doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol)./mean(ct.doseGridCT.density{1,1}(ct.doseGridCT.tissueBin(cellCounter).linIndVol));   % MCNP output is in MeV/cm^3/source particle & ct.doseGridCT.density is given in g/cm^3
            end
            mean(ct.doseGridCT.density{1,1}(ct.doseGridCT.tissueBin(cellCounter).linIndVol))
        end

ans =

    0.0012


ans =

   NaN


ans =

    1.0119


ans =

   NaN


ans =

    0.8206


ans =

    1.0119

        doseMatrixBixel.physicalDose = doseMatrixBixel.physicalDose*1.602177e-19*1e6*1e3; % Convert MeV/g to J/kg, output is now in Gy/source particle
        doseMatrixBixel.physicalDose_relError = permute(doseMatrixBixel.physicalDose_relError, [2,1,3]);
        if sum(doseMatrixBixel.physicalDose<0, 'all')
            warning('*********************')
            warning('Negative TMESH tally results detected. This is a hint for bad statistics!')
            warning(['Minimum value: ', num2str(min(doseMatrixBixel.physicalDose, [], 'all')), ' Gy and maximum value: ', num2str(max(doseMatrixBixel.physicalDose, [], 'all')), ' Gy.'])
            warning('*********************')

            doseMatrixBixel.physicalDose(doseMatrixBixel.physicalDose<0) = 0;
            doseMatrixBixel.physicalDose_relError(doseMatrixBixel.physicalDose<0) = 0;
        end
[Warning: *********************] 
[Warning: Negative TMESH tally results detected. This is a hint for bad statistics!] 
[Warning: Minimum value: -1.8536e-18 Gy and maximum value: 1.0405e-13 Gy.] 
[Warning: *********************] 
matRad_cfg = MatRad_Config.instance();
            matRad_cfg.dispWarning('Negative results set to zero.\n')
[Warning: Negative results set to zero.\n] 
            matRad_cfg.dispWarning('Negative results set to zero.')
[Warning: Negative results set to zero.] 
        matRad_cfg.dispInfo(['Reading out tally data took: ', num2str(toc), ' seconds.'])
Reading out tally data took: 1370.068 seconds.        matRad_cfg.dispInfo('*****')
***** dij.doseMatrixBixel(counterDijColumns).physicalDose_relError{1} = ...
            sparse(find(doseMatrixBixel.physicalDose_relError),1,doseMatrixBixel.physicalDose_relError(doseMatrixBixel.physicalDose_relError~=0),dij.numOfVoxels,1);
{Unrecognized field name "numOfVoxels".
} 
  dij.doseMatrixBixel(counterDijColumns).physicalDose_relError{1} = ...
            sparse(find(doseMatrixBixel.physicalDose_relError),1,doseMatrixBixel.physicalDose_relError(doseMatrixBixel.physicalDose_relError~=0),dij.doseGrid.numOfVoxels,1);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('sparse')" style="font-weight:bold">sparse</a>
Index exceeds array bounds.
} 
        dij.doseMatrixBixel(counterDijColumns).physicalDose_relError{1} = ...
            sparse(find(doseMatrixBixel.physicalDose_relError),1,doseMatrixBixel.physicalDose_relError(doseMatrixBixel.physicalDose_relError~=0),dij.doseGrid.numOfVoxels,1);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('sparse')" style="font-weight:bold">sparse</a>
Index exceeds array bounds.
} 
if system_dependent('IsDebugMode')==1, dbcont; end
matRad_cfg = MatRad_Config.instance();
cd(strcat(matRad_cfg.matRadRoot, filesep, 'MCNP', filesep, 'runfiles_tmp'));
tallyDataList = dir('MCNPrunfile_bixel*m');
dummyList = struct;
lengthList = dij.totalNumOfRays;
for listCounter = 1:lengthList
    i=1; while i<= lengthList && ~strcmp(tallyDataList(i).name, strcat('MCNPrunfile_bixel', int2str(listCounter), 'm')); i=i+1; end
    dummyList(listCounter).name = tallyDataList(i).name;
    dummyList(listCounter).folder = tallyDataList(i).folder;
    dummyList(listCounter).date = tallyDataList(i).date;
    dummyList(listCounter).bytes = tallyDataList(i).bytes;
    dummyList(listCounter).isdir = tallyDataList(i).isdir;
    dummyList(listCounter).datenum = tallyDataList(i).datenum;
end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
*****
if system_dependent('IsDebugMode')==1, dbstep; end
Evaluate Tally Data.
if system_dependent('IsDebugMode')==1, dbstep; end
*****
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
Data output given in two columns.
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbcont; end
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matlab.ui.control.WebComponent/set')" style="font-weight:bold">matlab.ui.control.WebComponent/set</a>
Invalid or deleted object.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_WorkflowWidget/btnCalcDose_Callback', 'D:\GitHub\matRad_Lucas\gui\widgets\matRad_WorkflowWidget.m', 408)" style="font-weight:bold">matRad_WorkflowWidget/btnCalcDose_Callback</a> (<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\gui\widgets\matRad_WorkflowWidget.m',408,0)">line 408</a>)
                set(InterfaceObj,'Enable','on');

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_WorkflowWidget>@(hObject,eventdata)btnCalcDose_Callback(this,hObject,eventdata)', 'D:\GitHub\matRad_Lucas\gui\widgets\matRad_WorkflowWidget.m', 158)" style="font-weight:bold">matRad_WorkflowWidget>@(hObject,eventdata)btnCalcDose_Callback(this,hObject,eventdata)</a> (<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\gui\widgets\matRad_WorkflowWidget.m',158,0)">line 158</a>)
                'Callback',@(hObject,eventdata) btnCalcDose_Callback(this,hObject,eventdata),...
} 
Error while evaluating UIControl Callback.

clear
load('SPHEREPHANTOM_BNCT.mat')
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('load')" style="font-weight:bold">load</a>
SPHEREPHANTOM_BNCT.mat is not found in the current folder or on the MATLAB path, but exists in:
    D:\LRZ Sync+Share\MATLAB\MATRAD\MCNP\TreatmentPlans\z_modPhantom

<a href = "matlab:internal.matlab.desktop.commandwindow.executeCommandForUser('cd ''D:\LRZ Sync+Share\MATLAB\MATRAD\MCNP\TreatmentPlans\z_modPhantom''')">Change the MATLAB current folder</a> or <a href = "matlab:internal.matlab.desktop.commandwindow.executeCommandForUser('addpath ''D:\LRZ Sync+Share\MATLAB\MATRAD\MCNP\TreatmentPlans\z_modPhantom''')">add its folder to the MATLAB path</a>.
} 
load('SPHEREPHANTOM_BNCT.mat')
matRadGUI
You are running matRad v2.10.1 "Blaise" (doseEnginesRobOpt-2eb7347b) with MATLAB 23.2
[Warning: Update failedUnrecognized field name "bioParam".] 
[Warning: Update failedUnrecognized field name "bioParam".] 
Precomputing Contours for Display...
Progress: 50.00 %100.00 %
[Warning: The matRad_multScen function will be deprecated soon!\nCheck out the new Scenario Models in the scenarios folder.] 
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_loadMachine')" style="font-weight:bold">matRad_loadMachine</a>
Could not find the following machine file: neutrons_Generic


Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('getAvailableEngines', 'getAvailableEngines.m', 45)" style="font-weight:bold">getAvailableEngines</a> (<a href="matlab: opentoline('getAvailableEngines.m',45,0)">line 45</a>)

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_PlanWidget/popupRadMode_Callback', 'matRad_PlanWidget.m', 1113)" style="font-weight:bold">matRad_PlanWidget/popupRadMode_Callback</a> (<a href="matlab: opentoline('matRad_PlanWidget.m',1113,0)">line 1113</a>)
            availableEngines = DoseEngines.matRad_DoseEngineBase.getAvailableEngines(pln);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_PlanWidget>@(hObject,eventdata)popupRadMode_Callback(this,hObject,eventdata)', 'matRad_PlanWidget.m', 192)" style="font-weight:bold">matRad_PlanWidget>@(hObject,eventdata)popupRadMode_Callback(this,hObject,eventdata)</a> (<a href="matlab: opentoline('matRad_PlanWidget.m',192,0)">line 192</a>)
                'Callback',@(hObject,eventdata)popupRadMode_Callback(this,hObject,eventdata),...
} 
Error while evaluating UIControl Callback.

[Warning: No base data available for machine: Generic. Selecting default machine.] 
[Warning: No base data available for machine: Generic. Selecting default machine.] 
[Warning: The matRad_multScen function will be deprecated soon!\nCheck out the new Scenario Models in the scenarios folder.] 
matRad: Generating stf struct...
[Warning: Could not find HLUT  in hlutLibrary folder. matRad default HLUT loaded] 
No book keeping for neutron energies.Progress: 100.00 %
[Warning: Inconsistent dose engines given! pln asks for 'SVDPB', but you are using 'MCNP'!] 
[Warning: Default dose calculation engine not available! Using MCNP.] 
Dose influence matrix calculation using  'MCNP' Dose Engine...
Dose grid has dimensions 7x7x7
Adjusting structures for overlap... Done!
Resampling structure set... Done!
Adjusting structures for overlap... Done!
Resampling structure set... Done!
