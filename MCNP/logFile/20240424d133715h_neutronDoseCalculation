*****Load pre-defined HU conversion properties and MCNP cross sections from conversionCT2tissue.mat.Note: Modification of conversionCT2tissue.mat using generateVar_conversionCT2tissue.m.**********Properties from (scaled) HU loaded are: Minimum value: -1024 and Maximum value: 0.[Warning: No information on rescale slope and/or intercept provided in DICOM data. Calculation might crash...] 
Please use question dialog to decide how to convert to scaled HU.**********You decided not to use DICOM rescale slope and intercept.**********Properties from rescaled HU are: Minimum value: 0 and Maximum value: 1000.*****Material types are assigned using the following HU intervals...air: 0 to 50lung: 50 to 830softTissue: 830 to 1280bone: 1280 to 5000*****Segmentation via HU intervals led to zero voxels with lung tissue.
*****
Skin thickness has been set to: 1 mm.
*****
*****
In case you wish to simulate BNCT irradiation make sure the PTV is called PTV_BNCT.
*****
Checking for PTV...
*****
No PTV for BNCT detected.
*****
Segmentation process performed sucessfully.
*****Calculate density from CT data with density given in [g/cm^3]********Neutron spectrum load from machine file.
***
Gamma/photon spectrum found in neutron machine. Will be included in the simulation as primary particles.
***
*****
Tally type: TMESH3...
*****
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_bixelDoseCalculatorMCNP.m',25,1)">25  </a>if this.MCNPinstallationCheck && ~this.externalCalculation
this.externalCalculation = true

this = 

[Warning: DEPRECATION WARNING: Property 'relDoseCutOff' of Dose Engine 'MCNP' is deprecated! Use Property 'relativeDosimetricCutOff' instead!] 
  <a href="matlab:helpPopup DoseEngines.matRad_NeutronMCNPEngine" style="font-weight:bold">matRad_NeutronMCNPEngine</a> with properties:

      possibleRadiationModes: {'neutrons'}
                        name: 'MCNP'
                   shortName: 'MCNP'
                      config: [1×1 matRad_MCNPConfig]
         externalCalculation: 1
           calcRMFparameters: 0
       MCNPinstallationCheck: 1
                  MCNPFolder: 'D:\GitHub\matRad_Lucas\MCNP'
                  currFolder: 'D:\GitHub\matRad_Lucas\MCNP\runfiles_tmp'
                 constantRBE: NaN
      numHistoriesPerBeamlet: 20000
          numHistoriesDirect: 1000000
            outputMCvariance: 1
    relativeDosimetricCutOff: 0.9950
               relDoseCutOff: 0.0050
                    doseGrid: [1×1 struct]
                    multScen: [1×1 matRad_NominalScenario]
                  voxelSubIx: []
     selectVoxelsInScenarios: 'all'
                    bioParam: [1×1 matRad_BiologicalModel]
                     machine: [1×1 struct]
                      timers: [1×1 struct]
             numOfColumnsDij: 1
                yCoordsV_vox: [531441×1 double]
                xCoordsV_vox: [531441×1 double]
                zCoordsV_vox: [531441×1 double]
        yCoordsV_voxDoseGrid: [110592×1 double]
        xCoordsV_voxDoseGrid: [110592×1 double]
        zCoordsV_voxDoseGrid: [110592×1 double]
                     VctGrid: [531441×1 double]
                   VdoseGrid: [110592×1 double]
                 VctGridMask: [4096000×1 logical]
               VdoseGridMask: [884736×1 logical]
          robustVoxelsOnGrid: {[884736×1 logical]}
                isDoseEngine: 1
                    hWaitbar: [1×1 Figure]

if system_dependent('IsDebugMode')==1, dbcont; end
Please use question dialog to continue after finishing external calculations.
*****
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',29,1)">29  </a>for counterBeam = 1:dij.numOfBeams
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',34,1)">34  </a>        dij.rayNum(counterDijColumns) = counterBixel;
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',35,1)">35  </a>        dij.beamNum(counterDijColumns) = counterBeam;
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',38,1)">38  </a>        matRad_cfg.dispInfo('*****\n')
if system_dependent('IsDebugMode')==1, dbstep; end
*****
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',39,1)">39  </a>        matRad_cfg.dispInfo('Evaluate Tally Data.\n')
if system_dependent('IsDebugMode')==1, dbstep; end
Evaluate Tally Data.
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',40,1)">40  </a>        matRad_cfg.dispInfo('*****\n')
if system_dependent('IsDebugMode')==1, dbstep; end
*****
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',41,1)">41  </a>        tic;
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',44,1)">44  </a>        resultMCNP = matRad_readDataFromText_TMESHvBioOpti(tallyDataList(counterDijColumns).name, 'TMESH3', 2);
if system_dependent('IsDebugMode')==1, dbstep; end
No MCNP tally for RBE calculation.
Data output given in two columns.
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',45,1)">45  </a>        resultMCNP = resultMCNP';
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',46,1)">46  </a>        doseMatrixBixel.physicalDose = zeros(dij.doseGrid.dimensions(2), dij.doseGrid.dimensions(1), dij.doseGrid.dimensions(3));   % Total dose
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',47,1)">47  </a>        doseMatrixBixel.physicalDose(1:end) = resultMCNP(:,1);
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',50,1)">50  </a>        doseMatrixBixel.physicalDose_relError = zeros(dij.doseGrid.dimensions(2), dij.doseGrid.dimensions(1), dij.doseGrid.dimensions(3));  % Relative error of total dose
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',51,1)">51  </a>        doseMatrixBixel.physicalDose_relError(1:end) = resultMCNP(:,2);
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',53,1)">53  </a>        clear resultMCNP
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',55,1)">55  </a>        doseMatrixBixel.physicalDose = permute(doseMatrixBixel.physicalDose, [2,1,3]);    % Permute matrix to match matRad coordinate system
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',56,1)">56  </a>        for cellCounter = 1:size(ct.doseGridCT.tissueBin,2)
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',57,1)">57  </a>            if cellCounter == 1
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',58,1)">58  </a>                doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol) = 0;   % Dose deposition in air is neglected
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',62,1)">62  </a>            end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',64,1)">64  </a>        end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',57,1)">57  </a>            if cellCounter == 1
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',59,1)">59  </a>            else
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',60,1)">60  </a>                doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol) = ...
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',61,1)">61  </a>                    doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol)./mean(ct.doseGridCT.density{1,1}(ct.doseGridCT.tissueBin(cellCounter).linIndVol));   % MCNP output is in MeV/cm^3/source particle & ct.doseGridCT.density is given in g/cm^3
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',62,1)">62  </a>            end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',64,1)">64  </a>        end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',57,1)">57  </a>            if cellCounter == 1
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',59,1)">59  </a>            else
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',60,1)">60  </a>                doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol) = ...
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',61,1)">61  </a>                    doseMatrixBixel.physicalDose(ct.doseGridCT.tissueBin(cellCounter).linIndVol)./mean(ct.doseGridCT.density{1,1}(ct.doseGridCT.tissueBin(cellCounter).linIndVol));   % MCNP output is in MeV/cm^3/source particle & ct.doseGridCT.density is given in g/cm^3
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',62,1)">62  </a>            end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',64,1)">64  </a>        end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('D:\GitHub\matRad_Lucas\MCNP\matRad_evaluateTallyMCNP.m',57,1)">57  </a>            if cellCounter == 1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
[Warning: *********************\n] 
if system_dependent('IsDebugMode')==1, dbstep; end
[Warning: Negative TMESH tally results detected. This is a hint for bad statistics!] 
if system_dependent('IsDebugMode')==1, dbstep; end
[Warning: Negative results set to zero.] 
if system_dependent('IsDebugMode')==1, dbstep; end
[Warning: Minimum value: -7.3342e-17 Gy and maximum value: 7.95e-17 Gy.] 
if system_dependent('IsDebugMode')==1, dbstep; end
[Warning: *********************] 
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
Reading out tally data took: 25.2195 seconds.
if system_dependent('IsDebugMode')==1, dbstep; end
*****
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
