*****
Load pre-defined HU conversion properties and MCNP cross sections from conversionCT2tissue.mat.
Note: Modification of conversionCT2tissue.mat using generateVar_conversionCT2tissue.m.
*****
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_NeutronMCNPEngine.m',162,1)">162 </a>            if ct.resolution.x ~= ct.resolution.y
if system_dependent('IsDebugMode')==1, dbcont; end
*****
Properties from (scaled) HU loaded are: Minimum value: -1000 and 
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_Widget/showError')" style="font-weight:bold">matRad_Widget/showError</a>
CalcDoseCallback: Error in dose calculation!Index exceeds the number of array elements. Index must not
exceed 650000.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_WorkflowWidget/btnCalcDose_Callback', 'matRad_WorkflowWidget.m', 410)" style="font-weight:bold">matRad_WorkflowWidget/btnCalcDose_Callback</a> (<a href="matlab: opentoline('matRad_WorkflowWidget.m',410,0)">line 410</a>)

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_WorkflowWidget>@(hObject,eventdata)btnCalcDose_Callback(this,hObject,eventdata)', 'matRad_WorkflowWidget.m', 158)" style="font-weight:bold">matRad_WorkflowWidget>@(hObject,eventdata)btnCalcDose_Callback(this,hObject,eventdata)</a> (<a href="matlab: opentoline('matRad_WorkflowWidget.m',158,0)">line 158</a>)
} 
Error while evaluating UIControl Callback.

{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_loadMachine')" style="font-weight:bold">matRad_loadMachine</a>
Could not find the following machine file: photons_MEDAPP


Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('getAvailableEngines', 'getAvailableEngines.m', 45)" style="font-weight:bold">getAvailableEngines</a> (<a href="matlab: opentoline('getAvailableEngines.m',45,0)">line 45</a>)

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_PlanWidget/popupRadMode_Callback', 'matRad_PlanWidget.m', 1113)" style="font-weight:bold">matRad_PlanWidget/popupRadMode_Callback</a> (<a href="matlab: opentoline('matRad_PlanWidget.m',1113,0)">line 1113</a>)

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('matRad_PlanWidget>@(hObject,eventdata)popupRadMode_Callback(this,hObject,eventdata)', 'matRad_PlanWidget.m', 192)" style="font-weight:bold">matRad_PlanWidget>@(hObject,eventdata)popupRadMode_Callback(this,hObject,eventdata)</a> (<a href="matlab: opentoline('matRad_PlanWidget.m',192,0)">line 192</a>)
} 
Error while evaluating UIControl Callback.

[Warning: No base data available for machine: MEDAPP. Selecting default machine.] 
[Warning: No base data available for machine: MEDAPP. Selecting default machine.] 
[Warning: The matRad_multScen function will be deprecated soon!\nCheck out the new Scenario Models in the
scenarios folder.] 
[Warning: Radiation mode does not match] 
[Warning: The matRad_multScen function will be deprecated soon!\nCheck out the new Scenario Models in the
scenarios folder.] 
[Warning: Radiation mode does not match] 
matRad: Generating stf struct...
[Warning: Could not find HLUT GE MEDICAL SYSTEMS-LightSpeed RT-ConvolutionKernel-STANDARD_photons.hlut in
hlutLibrary folder. matRad default HLUT loaded] 
Progress: 100.00 %
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',88,1)">88  </a>            if nargin < 1
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',90,1)">90  </a>            end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',93,1)">93  </a>            this = this@DoseEngines.matRad_PencilBeamEngineAbstract(pln);            
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',95,1)">95  </a>            if nargin > 0
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',99,1)">99  </a>                this.isFieldBasedDoseCalc = strcmp(num2str(pln.propStf.bixelWidth),'field');
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',100,1)">100 </a>            end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',101,1)">101 </a>        end
if system_dependent('IsDebugMode')==1, dbstep; end
End of function matRad_PhotonPencilBeamSVDEngine>matRad_PhotonPencilBeamSVDEngine.matRad_PhotonPencilBeamSVDEngine.
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',24,1)">24  </a>            engine = engineHandle(pln);
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',29,1)">29  </a>        end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',33,1)">33  </a>    end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',36,1)">36  </a>end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',41,1)">41  </a>if initDefaultEngine
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',59,1)">59  </a>end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',61,1)">61  </a>if isempty(engine)
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',63,1)">63  </a>end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/getEngineFromPln.m',65,1)">65  </a>end
if system_dependent('IsDebugMode')==1, dbstep; end
End of function matRad_DoseEngineBase.getEngineFromPln.
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/matRad_calcDoseInfluence.m',45,1)">45  </a>engine = DoseEngines.matRad_DoseEngineBase.getEngineFromPln(pln);
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/matRad_calcDoseInfluence.m',48,1)">48  </a>dij = engine.calcDoseInfluence(ct,cst,stf);
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/matRad_DoseEngineBase.m',207,1)">207 </a>            this.calcDoseDirect = false;
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/matRad_DoseEngineBase.m',208,1)">208 </a>            dij = this.calcDose(ct,cst,stf);
if system_dependent('IsDebugMode')==1, dbstep; end
Dose influence matrix calculation using  'SVD Pencil Beam' Dose Engine...
Dose grid has dimensions 100x100x65
Adjusting structures for overlap... Done!
Resampling structure set... Done!
Adjusting structures for overlap... Done!
[Warning: Could not find HLUT GE MEDICAL SYSTEMS-LightSpeed RT-ConvolutionKernel-STANDARD_photons.hlut in
hlutLibrary folder. matRad default HLUT loaded] 
[Warning: Kernel Cut-Off 'Inf mm' larger than machine data range of '179.500000 mm'. Using '179.500000 mm'!] 
matRad: calculate radiological depth cube... done.
Progress: 0.10 %	SSD = 937 mm ...
	Uniform primary photon fluence -> pre-compute kernel convolution...
Progress: 4.00 %36.00 %72.00 %100.00 %
Dose calculation finished in 5.16581 seconds!
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/@matRad_DoseEngineBase/matRad_DoseEngineBase.m',209,1)">209 </a>        end
if system_dependent('IsDebugMode')==1, dbcont; end
matRad: Generating stf struct...
[Warning: Could not find HLUT GE MEDICAL SYSTEMS-LightSpeed RT-ConvolutionKernel-STANDARD_photons.hlut in
hlutLibrary folder. matRad default HLUT loaded] 
Progress: 100.00 %
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',88,1)">88  </a>            if nargin < 1
if system_dependent('IsDebugMode')==1, dbcont; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PencilBeamEngineAbstract.m',83,1)">83  </a>            matRad_cfg = MatRad_Config.instance();
if system_dependent('IsDebugMode')==1, dbstep in; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/MatRad_Config.m',600,1)">600 </a>            persistent uniqueInstance;
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/MatRad_Config.m',602,1)">602 </a>            if isempty(uniqueInstance)
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/MatRad_Config.m',605,1)">605 </a>            else
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/MatRad_Config.m',606,1)">606 </a>                obj = uniqueInstance;
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/MatRad_Config.m',607,1)">607 </a>            end
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/MatRad_Config.m',608,1)">608 </a>        end
if system_dependent('IsDebugMode')==1, dbstep; end
End of function MatRad_Config>MatRad_Config.instance.
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PencilBeamEngineAbstract.m',83,1)">83  </a>            matRad_cfg = MatRad_Config.instance();
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PencilBeamEngineAbstract.m',86,1)">86  </a>            dij = this.initDoseCalc(ct,cst,stf);
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',123,1)">123 </a>            matRad_cfg = MatRad_Config.instance();
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',128,1)">128 </a>            this.isFieldBasedDoseCalc = any(arrayfun(@(s) strcmp(num2str(s.bixelWidth),'field'),stf));
if system_dependent('IsDebugMode')==1, dbstep; end
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',131,1)">131 </a>            dij = initDoseCalc@DoseEngines.matRad_PencilBeamEngineAbstract(this,ct,cst,stf);
if system_dependent('IsDebugMode')==1, dbstep; end
Dose influence matrix calculation using  'SVD Pencil Beam' Dose Engine...
Dose grid has dimensions 100x100x65
Adjusting structures for overlap... Done!
Resampling structure set... Done!
Adjusting structures for overlap... Done!
[Warning: Could not find HLUT GE MEDICAL SYSTEMS-LightSpeed RT-ConvolutionKernel-STANDARD_photons.hlut in
hlutLibrary folder. matRad default HLUT loaded] 
<a href="matlab: opentoline('/Users/lucassommer/Daten/gitHub/matRadNeutronDoseCalc/matRad_Lucas/doseCalc/+DoseEngines/matRad_PhotonPencilBeamSVDEngine.m',136,1)">136 </a>            if isfield(this.machine.data,'penumbraFWHMatIso')
